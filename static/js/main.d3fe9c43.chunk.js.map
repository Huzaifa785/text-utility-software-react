{"version":3,"sources":["components/Navbar.js","components/TextField.js","components/Alert.js","App.js","index.js"],"names":["Navbar","props","className","mode","href","type","id","onClick","toggleMode","htmlFor","TextField","useState","text","setText","finalResult","split","filter","word","rows","value","onChange","event","target","style","background","color","toUpperCase","showAlert","setTimeout","setAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","myText","join","length","Alert","alert","role","msg","App","setMode","body","message","ReactDOM","render"],"mappings":"qLAEe,SAASA,EAAOC,GAC3B,OACI,mCACI,qBAAKC,UAAS,yCAAoCD,EAAME,KAA1C,eAAqDF,EAAME,MAAzE,SACI,sBAAKD,UAAU,YAAf,UACI,mBAAGA,UAAU,eAAeE,KAAK,IAAjC,mCACA,wBAAQF,UAAU,iBAAiBG,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAA5L,SACI,sBAAMH,UAAU,0BAEpB,sBAAKA,UAAU,2BAA2BI,GAAG,yBAA7C,UACI,oBAAIJ,UAAU,kCAAd,SACI,oBAAIA,UAAU,WAAd,SACI,mBAAGA,UAAU,kBAAkB,eAAa,OAAOE,KAAK,IAAxD,sBAGR,sBAAKF,UAAU,yBAAf,UACI,uBAAOA,UAAU,mBAAmBG,KAAK,WAAWC,GAAG,OAAOC,QAASN,EAAMO,aAC7E,wBAAON,UAAS,gCAA0C,UAAfD,EAAME,KAAmB,OAAS,SAAWM,QAAQ,OAAhG,oBAA8H,UAAfR,EAAME,KAAmB,OAAS,QAAjJ,wB,KChBb,SAASO,EAAUT,GAC9B,MAAwBU,mBAAS,mCAAjC,mBAAOC,EAAP,KAAaC,EAAb,KA8CIC,EADSF,EAAKG,MAAM,KACCC,QAAO,SAACC,GAC7B,MAAiB,KAATA,KAMZ,OACI,qCACI,sFACA,0BAAUf,UAAU,eAAegB,KAAK,IAAIC,MAAOP,EAAMQ,SAN1C,SAACC,GACpBR,EAAQQ,EAAMC,OAAOH,QAKkEb,GAAG,WAAWiB,MAAO,CAACC,WAA2B,SAAfvB,EAAME,KAAkB,UAAY,QAASsB,MAAsB,SAAfxB,EAAME,KAAkB,QAAU,WAC3M,wBAAQD,UAAU,uBAAuBK,QAxDtB,WACvBM,EAAQD,EAAKc,eACbzB,EAAM0B,UAAU,wCAAyC,WACzDC,YAAW,WACP3B,EAAM4B,SAAS,QAChB,MAmDC,kCACA,wBAAQ3B,UAAU,4BAA4BK,QAjD3B,WACvBM,EAAQD,EAAKkB,eACb7B,EAAM0B,UAAU,2CAA4C,WAC5DC,YAAW,WACP3B,EAAM4B,SAAS,QAChB,MA4CC,kCACA,wBAAQ3B,UAAU,4BAA4BK,QA1CpC,WACdM,EAAQ,IACRZ,EAAM0B,UAAU,gCAAiC,WACjDC,YAAW,WACP3B,EAAM4B,SAAS,QAChB,MAqCC,wBACA,wBAAQ3B,UAAU,4BAA4BK,QAnC9B,WACPwB,SAASC,eAAe,YAC9BC,SACPC,UAAUC,UAAUC,UAAUxB,EAAKO,OACnClB,EAAM0B,UAAU,mCAAoC,WACpDC,YAAW,WACP3B,EAAM4B,SAAS,QAChB,MA4BC,+BACA,wBAAQ3B,UAAU,4BAA4BK,QA1B5B,WACtB,IAAI8B,EAASzB,EAAKG,MAAM,QACxBF,EAAQwB,EAAOC,KAAK,MACpBrC,EAAM0B,UAAU,4CAA6C,WAC7DC,YAAW,WACP3B,EAAM4B,SAAS,QAChB,MAoBC,iCACA,sBAAK3B,UAAU,WAAf,UACI,sBAAKA,UAAU,WAAf,UACI,yCACA,4BAAIU,EAAK2B,OAAO,EAAI3B,EAAO,gDAE/B,sBAAKV,UAAU,WAAf,UACA,mDACI,qBAAIA,UAAU,aAAd,UACI,qBAAIA,UAAU,kBAAkBqB,MAAO,CAACC,WAA2B,SAAfvB,EAAME,KAAkB,UAAY,QAASsB,MAAsB,SAAfxB,EAAME,KAAkB,QAAU,SAA1I,UAAoJ,6DAAyCW,EAAYyB,UACzM,qBAAIrC,UAAU,kBAAkBqB,MAAO,CAACC,WAA2B,SAAfvB,EAAME,KAAkB,UAAY,QAASsB,MAAsB,SAAfxB,EAAME,KAAkB,QAAU,SAA1I,UAAoJ,kEAA8CS,EAAK2B,UACvM,qBAAIrC,UAAU,kBAAkBqB,MAAO,CAACC,WAA2B,SAAfvB,EAAME,KAAkB,UAAY,QAASsB,MAAsB,SAAfxB,EAAME,KAAkB,QAAU,SAA1I,UAAoJ,iDAA6BS,EAAK2B,OAAS,EAAI,KAAQ3B,EAAKG,MAAM,KAAKwB,OAAS,IAApO,0BC1ET,SAASC,EAAMvC,GAC1B,OACIA,EAAMwC,OAAS,qBAAKvC,UAAS,sBAAiBD,EAAMwC,MAAMpC,MAAQqC,KAAK,QAAxD,SACX,iCAASzC,EAAMwC,MAAME,QCClB,SAASC,IACpB,MAAwBjC,mBAAS,SAAjC,mBAAOR,EAAP,KAAa0C,EAAb,KACA,EAA0BlC,mBAAS,MAAnC,mBAAO8B,EAAP,KAAcZ,EAAd,KAqBA,OACI,qCACA,cAAC7B,EAAD,CAAQG,KAAQA,EAAMK,WAdP,WACF,UAATL,GACA0C,EAAQ,QACRd,SAASe,KAAKvB,MAAMC,WAAa,UACjCO,SAASe,KAAKvB,MAAME,MAAQ,UAG5BoB,EAAQ,SACRd,SAASe,KAAKvB,MAAMC,WAAa,QACjCO,SAASe,KAAKvB,MAAME,MAAQ,cAMhC,qBAAKvB,UAAU,iBAAf,SACI,cAACsC,EAAD,CAAOC,MAASA,MAEpB,qBAAKvC,UAAU,iBAAf,SACI,cAACQ,EAAD,CAAWiB,UA1BD,SAACoB,EAAS1C,GACxBwB,EAAS,CACLc,IAAKI,EACL1C,KAAMA,KAuB6BwB,SAAYA,EAAU1B,KAAQA,SChC7E6C,IAASC,OAAO,cAAC,EAAD,IAASlB,SAASC,eAAe,U","file":"static/js/main.d3fe9c43.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n                <div className=\"container\">\r\n                    <a className=\"navbar-brand\" href=\"/\">Text Utility Software</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n                            </li>\r\n                        </ul>\r\n                        <div className=\"form-check form-switch\">\r\n                            <input className=\"form-check-input\" type=\"checkbox\" id=\"mode\" onClick={props.toggleMode} />\r\n                            <label className={`form-check-label text-${props.mode === 'light' ? 'dark' : 'light'}`} htmlFor=\"mode\">Enable {props.mode === 'light' ? 'Dark' : 'Light'} Mode</label>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n            </nav>\r\n        </>\r\n            )\r\n}\r\n","import React, { useState } from 'react'\r\nimport '../App.css'\r\n\r\nexport default function TextField(props) {\r\n    const [text, setText] = useState(\"Replace this text with yours...\")\r\n    const convertToUppercase = () => {\r\n        setText(text.toUpperCase())\r\n        props.showAlert(\"Successfully converted into UPPERCASE\", \"success\")\r\n        setTimeout(() => {\r\n            props.setAlert(null)\r\n        }, 4000);\r\n    }\r\n\r\n    const convertToLowercase = () => {\r\n        setText(text.toLowerCase())\r\n        props.showAlert(\"Successfully converted into lowercase...\", \"success\")\r\n        setTimeout(() => {\r\n            props.setAlert(null)\r\n        }, 4000);\r\n    }\r\n\r\n    const clearText = () => {\r\n        setText(\"\")\r\n        props.showAlert(\"Successfully cleared the text\", \"success\")\r\n        setTimeout(() => {\r\n            props.setAlert(null)\r\n        }, 4000);\r\n    }\r\n\r\n    const copyToClipboard = () => {\r\n        let myText = document.getElementById('text-box')\r\n        myText.select()\r\n        navigator.clipboard.writeText(text.value)\r\n        props.showAlert(\"Successfully copied to clipboard\", \"success\")\r\n        setTimeout(() => {\r\n            props.setAlert(null)\r\n        }, 4000);\r\n    }\r\n\r\n    const removeExtraSpaces = () => {\r\n        let myText = text.split(/[ ]+/)\r\n        setText(myText.join(\" \"))\r\n        props.showAlert(\"Successfully removed all the extra spaces\", \"success\")\r\n        setTimeout(() => {\r\n            props.setAlert(null)\r\n        }, 4000);\r\n    }\r\n\r\n    // Logic for total number of words\r\n    let result = text.split(\" \")\r\n    let finalResult = result.filter((word) => {\r\n        return (word !== \"\")\r\n    })\r\n\r\n    const handleOnChange = (event) => {\r\n        setText(event.target.value)\r\n    }\r\n    return (\r\n        <>\r\n            <h2>Enter your text here and then start analyzing it....</h2>\r\n            <textarea className=\"form-control\" rows=\"8\" value={text} onChange={handleOnChange} id=\"text-box\" style={{background: props.mode === 'dark' ? '#212529' : 'white', color: props.mode === 'dark' ? 'white' : 'black'}}></textarea>\r\n            <button className=\"btn btn-success mt-3\" onClick={convertToUppercase}>Convert To UPPERCASE</button>\r\n            <button className=\"btn btn-success mt-3 mx-2\" onClick={convertToLowercase}>Convert To lowercase</button>\r\n            <button className=\"btn btn-success mt-3 mx-2\" onClick={clearText}>Clear Text</button>\r\n            <button className=\"btn btn-success mt-3 mx-2\" onClick={copyToClipboard}>Copy To Clipboard</button>\r\n            <button className=\"btn btn-success mt-3 mx-2\" onClick={removeExtraSpaces}>Remove Extra Spaces</button>\r\n            <div className=\"row mt-3\">\r\n                <div className=\"col-lg-6\">\r\n                    <h2>Preview</h2>\r\n                    <p>{text.length>0 ? text : 'Enter some text above to preview here...'}</p>\r\n                </div>\r\n                <div className=\"col-lg-6\">\r\n                <h2>Your Text Summary</h2>\r\n                    <ul className=\"list-group\">\r\n                        <li className=\"list-group-item\" style={{background: props.mode === 'dark' ? '#212529' : 'white', color: props.mode === 'dark' ? 'white' : 'black'}}><strong>Total Number Of Words: </strong>{finalResult.length}</li>\r\n                        <li className=\"list-group-item\" style={{background: props.mode === 'dark' ? '#212529' : 'white', color: props.mode === 'dark' ? 'white' : 'black'}}><strong>Total Number Of Characters: </strong>{text.length}</li>\r\n                        <li className=\"list-group-item\" style={{background: props.mode === 'dark' ? '#212529' : 'white', color: props.mode === 'dark' ? 'white' : 'black'}}><strong>Read Time: </strong>{text.length > 0 ? 0.008 * text.split(\" \").length : '0' } minutes</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type}`} role=\"alert\">\r\n            <strong>{props.alert.msg}</strong>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport Navbar from './components/Navbar';\r\nimport TextField from './components/TextField';\r\nimport Alert from './components/Alert';\r\nimport './App.css';\r\n\r\nexport default function App() {\r\n    const [mode, setMode] = useState('light')\r\n    const [alert, setAlert] = useState(null)\r\n\r\n    const showAlert = (message, type) => {\r\n        setAlert({\r\n            msg: message,\r\n            type: type\r\n        })\r\n    }\r\n\r\n    const toggleMode = () => {\r\n        if (mode === 'light') {\r\n            setMode('dark')\r\n            document.body.style.background = '#212529'\r\n            document.body.style.color = 'white'\r\n        }\r\n        else {\r\n            setMode('light')\r\n            document.body.style.background = 'white'\r\n            document.body.style.color = '#212529'\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n        <Navbar mode = {mode} toggleMode = {toggleMode} />\r\n        <div className=\"container mt-3\">\r\n            <Alert alert = {alert} />\r\n        </div>\r\n        <div className=\"container mt-5\">\r\n            <TextField showAlert = {showAlert} setAlert = {setAlert} mode = {mode} />\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}